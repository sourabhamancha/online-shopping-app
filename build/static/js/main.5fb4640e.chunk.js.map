{"version":3,"sources":["context/auth.js","components/HomePlaceholder.js","components/RemoveFromCartButton.js","components/BuyButton.js","components/CartItem.js","components/OrderSummary.js","pages/Cart.js","components/MoreButton.js","components/Products.js","pages/Home.js","components/AddProduct.js","components/NavBar.js","util/AuthRoute.js","util/RoutePath.js","pages/Login.js","pages/Signup.js","pages/Orders.js","App.js","ApolloProvider.js","serviceWorker.js","index.js"],"names":["initialState","user","navItem","cartTotal","pathname","window","location","path","substring","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","cartProductsIds","login","userData","logout","authReducer","state","action","type","payload","value","productId","filter","id","AuthProvider","props","useReducer","dispatch","Provider","setHome","setLogin","setSignup","setOrders","setCart","setItem","token","initCartTotal","updateCartTotal","removeProductId","HomePlaceholder","Card","Group","doubling","itemsPerRow","stackable","_","times","i","key","Segment","Label","color","ribbon","Placeholder","Image","square","Divider","Content","Header","Line","length","RemoveFromCartButton","useContext","userId","useMutation","REMOVE_FROM_CART_MUTATION","onError","err","console","log","graphQLErrors","variables","refetchQueries","query","FETCH_ALL_PRODUCTS_QUERY","FETCH_CART_ITEMS_QUERY","removeFromCart","Button","secondary","onClick","gql","BuyButton","productsIds","history","useHistory","useState","open","setOpen","CHECKOUT_ORDERS_MUTATION","update","__","checkoutOrders","loading","primary","Confirm","cancelButton","confirmButton","onCancel","onConfirm","reload","push","className","CartItem","cartItem","firstItem","context","count","setCount","useEffect","_id","parseInt","product","price","Grid","centered","Row","columns","Column","src","imageUrl","name","category","description","sub","basic","icon","prevCount","OrderSummary","fluid","style","backgroundColor","Meta","width","extra","margin","Cart","useQuery","error","data","message","Object","keys","cartItems","verticalAlign","raised","as","map","item","MoreButton","ADD_TO_CART_MUTATION","addToCart","animated","floated","visible","hidden","Icon","Modal","dimmer","onClose","image","wrapped","size","Description","isOrdered","Actions","inCart","Link","to","Products","products","divided","Popup","position","content","trigger","Home","AddProduct","prodVal","setProdVal","CREATE_PRODUCT_MUTATION","createProduct","mutationLoading","handleOnChange","e","target","visibility","Form","onSubmit","creatorId","Field","placeholder","onChange","NavBar","unAuthNav","Menu","inverted","Item","active","authNav","AuthRoute","Component","component","rest","render","LOGIN_USER_MUTATION","Login","email","password","loginValues","setLoginValues","errors","setErrors","result","extensions","loginUser","preventDefault","values","REGISTER_USER_MUTATION","Signup","fullname","confirmPassword","regValues","setRegValues","registerUser","Orders","FETCH_ALL_ORDERS_QUERY","Table","HeaderCell","Body","orders","order","Cell","moment","createdAt","fromNow","App","Container","exact","RoutePath","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+OAGMA,EAAe,CACnBC,KAAM,KACNC,QAAS,OACTC,UAAW,GAGPC,EAAWC,OAAOC,SAASF,SAC3BG,EAAoB,MAAbH,EAAmB,OAASA,EAASI,UAAU,GAG5D,GAFAR,EAAaE,QAAUK,EAEnBE,aAAaC,QAAQ,YAAa,CACpC,IAAMC,EAAeC,IAAUH,aAAaC,QAAQ,aAE7B,IAAnBC,EAAaE,IAAaC,KAAKC,MACjCN,aAAaO,WAAW,YAExBhB,EAAaC,KAAOU,EAIxB,IAAMM,EAAcC,wBAAc,CAChCjB,KAAM,KACNC,QAAS,OACTC,UAAW,EACXgB,gBAAiB,GACjBC,MAAO,SAACC,KACRC,OAAQ,eAGV,SAASC,EAAYC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,2BACFF,GADL,IAEEvB,KAAMwB,EAAOE,UAEjB,IAAK,SACH,OAAO,2BACFH,GADL,IAEEvB,KAAM,OAEV,IAAK,MACH,OAAO,2BACFuB,GADL,IAEEtB,QAASuB,EAAOE,UAEpB,IAAK,YACH,OAAO,2BACFH,GADL,IAEErB,UAAW,EACXgB,gBAAiB,KAErB,IAAK,OACH,OAAO,2BACFK,GADL,IAEErB,UAAWqB,EAAMrB,UAAYsB,EAAOE,QAAQC,MAC5CT,gBAAgB,GAAD,mBAAMK,EAAML,iBAAZ,CAA6BM,EAAOE,QAAQE,cAE/D,IAAK,WACH,OAAO,2BACFL,GADL,IAEEL,gBAAiBK,EAAML,gBAAgBW,QACrC,SAACC,GAAD,OAAQA,IAAON,EAAOE,aAG5B,QACE,OAAOH,GAIb,SAASQ,EAAaC,GAAQ,IAAD,EACDC,qBAAWX,EAAavB,GADvB,mBACpBwB,EADoB,KACbW,EADa,KAuE3B,OACE,kBAAClB,EAAYmB,SAAb,eACER,MAAO,CACL3B,KAAMuB,EAAMvB,KACZC,QAASsB,EAAMtB,QACfC,UAAWqB,EAAMrB,UACjBgB,gBAAiBK,EAAML,gBACvBkB,QA9DN,WACEF,EAAS,CACPT,KAAM,MACNC,QAAS,UA4DPW,SAxDN,WACEH,EAAS,CACPT,KAAM,MACNC,QAAS,WAsDPY,UAlDN,WACEJ,EAAS,CACPT,KAAM,MACNC,QAAS,YAgDPa,UA5CN,WACEL,EAAS,CACPT,KAAM,MACNC,QAAS,YA0CPc,QAtCN,WACEN,EAAS,CACPT,KAAM,MACNC,QAAS,UAoCPP,MAhFN,SAAeC,GACbZ,aAAaiC,QAAQ,WAAYrB,EAASsB,OAC1CR,EAAS,CACPT,KAAM,QACNC,QAASN,KA6EPC,OAzEN,WACEb,aAAaO,WAAW,YACxBmB,EAAS,CAAET,KAAM,YAwEbkB,cA3BN,WACET,EAAS,CACPT,KAAM,eA0BJmB,gBAnCN,SAAyBjB,EAAOC,GAC9BM,EAAS,CACPT,KAAM,OACNC,QAAS,CAAEC,QAAOC,gBAiChBiB,gBAvBN,SAAyBjB,GACvBM,EAAS,CACPT,KAAM,WACNC,QAASE,OAsBLI,I,sHChIKc,MA5Bf,WACE,OACE,kBAACC,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAACC,YAAa,EAAGC,WAAS,GAC3CC,IAAEC,MAAM,IAAI,SAACC,GAAD,OACX,kBAACP,EAAA,EAAD,CAAMQ,IAAKD,GACT,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,MAAM,OAAOC,QAAM,GAA1B,YAGA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAYC,MAAb,CAAmBC,QAAM,KAE3B,kBAACC,EAAA,EAAD,MACA,kBAAChB,EAAA,EAAKiB,QAAN,KACE,kBAACJ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAYK,OAAb,KACE,kBAACL,EAAA,EAAYM,KAAb,CAAkBC,OAAO,WACzB,kBAACP,EAAA,EAAYM,KAAb,CAAkBC,OAAO,yB,uOCqB5BC,MAnCf,YAA8C,IAAdxC,EAAa,EAAbA,UAAa,EACTyC,qBAAWrD,GAArChB,EADmC,EACnCA,KAAM6C,EAD6B,EAC7BA,gBACRyB,EAAStE,EAAOA,EAAKsE,OAAS,GAFO,EAGlBC,YAAYC,EAA2B,CAC9DC,QAD8D,SACtDC,GACNC,QAAQC,IAAIF,EAAIG,gBAElBC,UAAW,CAAER,SAAQ1C,aACrBmD,eAAgB,CACd,CACEC,MAAOC,GACPH,UAAW,CAAER,WAEf,CACEU,MAAOE,EACPJ,UAAW,CAAER,cAZZa,EAHoC,oBAoB3C,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,WACPH,IACAtC,EAAgBjB,KAJpB,sBAeA4C,EAA4Be,IAAH,K,2NCqChBC,MAxEf,YAA2C,IAAtB/D,EAAqB,EAArBA,KAAMgE,EAAe,EAAfA,YACnBC,EAAUC,cADwB,EAEhBC,oBAAS,GAFO,mBAEjCC,EAFiC,KAE3BC,EAF2B,OAGKzB,qBAAWrD,GAAhDhB,EAHgC,EAGhCA,KAAMkB,EAH0B,EAG1BA,gBAAiBqB,EAHS,EAGTA,UACzB+B,EAAStE,EAAOA,EAAKsE,OAAS,GAJI,EAKFC,YAAYwB,EAA0B,CAC1EtB,QAD0E,SAClEC,GACNC,QAAQC,IAAIF,EAAIG,gBAElBC,UAAW,CACTR,SACAmB,YAAsB,aAAThE,EAAsBP,EAAkBuE,GAYvDO,OAlB0E,SAkBnE5C,EAAG6C,OAvB4B,mBAKjCC,EALiC,KAKfC,EALe,KAKfA,QA4CzB,OACE,6BACY,SAAT1E,EACC,kBAAC2D,EAAA,EAAD,CAAQgB,SAAO,EAACd,QAAS,kBAAMQ,GAAQ,KAAvC,iBAIA,kBAACV,EAAA,EAAD,CAAQ1B,MAAM,SAAS4B,QAAS,kBAAMQ,GAAQ,KAA9C,mBAIF,kBAACO,EAAA,EAAD,CACER,KAAMA,EACNS,aAAa,oBACbC,cAAc,cACdC,SAAU,kBAAMV,GAAQ,IACxBW,UA1BkB,WACtBP,IACAJ,GAAQ,GACR1F,OAAOC,SAASqG,QAAO,GACV,aAATjF,IACFiE,EAAQiB,KAAK,WACbpE,MAqBEqE,UAAWT,EAAU,UAAY,OAQnCJ,EAA2BR,IAAH,K,2BCNfsB,MArEf,YAA4C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACtBC,EAAU3C,qBAAWrD,GADc,EAGf4E,mBAAS,GAHM,mBAGlCqB,EAHkC,KAG3BC,EAH2B,KAezC,OAVAC,qBAAU,WACJL,EAASM,MAAQL,GACnBC,EAAQrE,gBAEVqE,EAAQpE,gBACNqE,EAAQI,SAASP,EAASQ,QAAQC,OAClCT,EAASQ,QAAQF,OAElB,IAGD,6BACE,kBAACI,EAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAAC/D,EAAA,EAAD,CAAOgE,IAAKf,EAASQ,QAAQQ,YAE/B,kBAACN,EAAA,EAAKI,OAAN,KACE,kBAAC3D,EAAA,EAAD,KAAS6C,EAASQ,QAAQS,MAC1B,4CAAkBjB,EAASQ,QAAQU,UACnC,6BACA,8BAAOlB,EAASQ,QAAQW,aACxB,6BACA,6BACA,6BACE,kBAAChE,EAAA,EAAD,CAAQiE,KAAG,GAAX,eACA,kCAAQjB,EAAQI,SAASP,EAASQ,QAAQC,WAIhD,kBAACC,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB,kBAAC,EAAD,CAAWlG,KAAK,OAAOgE,YAAa,CAACqB,EAASQ,QAAQF,OACtD,kBAAChC,EAAA,EAAD,CACE+C,OAAK,EACLzE,MAAM,MACN0E,KAAK,aACL9C,QAAS,WACO,IAAV2B,EACFC,EAASD,IAETC,GAAS,SAACmB,GAAD,OAAeA,EAAY,KACpCrB,EAAQpE,iBAAiByE,SAASP,EAASQ,QAAQC,YAIzD,kBAACnC,EAAA,EAAD,CAAQ+C,OAAK,EAACzE,MAAM,QACjBuD,GAEH,kBAAC7B,EAAA,EAAD,CACE+C,OAAK,EACLzE,MAAM,QACN0E,KAAK,WACL9C,QAAS,WACP4B,GAAS,SAACmB,GAAD,OAAeA,EAAY,KACpCrB,EAAQpE,gBAAgByE,SAASP,EAASQ,QAAQC,WAGtD,kBAAC,EAAD,CAAsB3F,UAAWkF,EAASQ,QAAQF,UC1B7CkB,MAvCf,WACE,IAAMtB,EAAU3C,qBAAWrD,GAC3B,OACE,kBAAC+B,EAAA,EAAD,CAAMwF,OAAK,EAACC,MAAO,CAAEC,gBAAiB,UACpC,kBAAC1F,EAAA,EAAKiB,QAAN,KACE,kBAACjB,EAAA,EAAKkB,OAAN,CAAauE,MAAO,CAAE9E,MAAO,UAA7B,WACA,6BACA,kBAACX,EAAA,EAAK2F,KAAN,CAAWF,MAAO,CAAE9E,MAAO,UACzB,kBAAC8D,EAAA,EAAD,CAAMG,QAAQ,SACZ,kBAACH,EAAA,EAAKI,OAAN,iBACA,kBAACJ,EAAA,EAAKI,OAAN,CAAae,MAAO,IACpB,kBAACnB,EAAA,EAAKI,OAAN,SAAeZ,EAAQ9G,aAG3B,kBAAC6C,EAAA,EAAK2F,KAAN,CAAWF,MAAO,CAAE9E,MAAO,UACzB,kBAAC8D,EAAA,EAAD,CAAMG,QAAQ,SACZ,kBAACH,EAAA,EAAKI,OAAN,iBACA,kBAACJ,EAAA,EAAKI,OAAN,CAAae,MAAO,IACpB,kBAACnB,EAAA,EAAKI,OAAN,aAGJ,6BACA,kBAAC7E,EAAA,EAAKkB,OAAN,CAAauE,MAAO,CAAE9E,MAAO,UAC3B,kBAAC8D,EAAA,EAAD,CAAMG,QAAQ,SACZ,kBAACH,EAAA,EAAKI,OAAN,cACA,kBAACJ,EAAA,EAAKI,OAAN,CAAae,MAAO,IACpB,kBAACnB,EAAA,EAAKI,OAAN,SAAeZ,EAAQ9G,cAI7B,kBAAC6C,EAAA,EAAKiB,QAAN,CAAc4E,OAAK,GACjB,yBAAKJ,MAAO,CAAEK,OAAQ,SACpB,kBAAC,EAAD,CAAWpH,KAAK,iB,0SCsBXqH,MAlDf,WACE,IAAM9B,EAAU3C,qBAAWrD,GADb,EAEmB+H,YAAS7D,EAAwB,CAChEJ,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,MADpD6B,EAFM,EAENA,QAAS6C,EAFH,EAEGA,MAAOC,EAFV,EAEUA,KAIxB,GAAI9C,EAAS,OAAO,0CAEpB,GAAI6C,EAAO,MAAM,UAAN,OAAiBA,EAAME,SAElC,GAAIC,OAAOC,KAAKH,EAAKI,WAAWlF,OAAS,EACvC,OAAO,6CAET,IAAM4C,EAAYkC,EAAKI,UAAU,GAAGjC,IAEpC,OACE,6BACE,kBAACI,EAAA,EAAD,CAAMG,QAAS,EAAGF,UAAQ,GACxB,kBAACD,EAAA,EAAKE,IAAN,CAAU4B,cAAc,OACtB,kBAAC9B,EAAA,EAAKI,OAAN,CAAae,MAAM,MACjB,kBAACnF,EAAA,EAAD,CAAS+F,QAAM,GACb,kBAAC9F,EAAA,EAAD,CAAO+F,GAAG,IAAI9F,MAAM,MAAMC,QAAM,GAAhC,gBAGCsF,EAAKI,UAAUI,KAAI,SAACC,GAAD,OAClB,yBAAKnG,IAAKmG,EAAKtC,KACb,6BACA,kBAAC,EAAD,CAAUN,SAAU4C,EAAM3C,UAAWA,IACrC,kBAAChD,EAAA,EAAD,YAKR,kBAACyD,EAAA,EAAKI,OAAN,CAAae,MAAM,KACjB,kBAACnF,EAAA,EAAD,CAAS+F,QAAM,GACb,kBAAC9F,EAAA,EAAD,CAAO+F,GAAG,IAAI9F,MAAM,SAASC,QAAM,GAAnC,iBAGA,6BACE,6BACA,kBAAC,EAAD,aAYHuB,EAAyBK,IAAH,K,iBC4CpBoE,MAhGf,YAAkC,IAAZrC,EAAW,EAAXA,QACdN,EAAU3C,qBAAWrD,GADI,EAEP4E,oBAAS,GAFF,mBAExBC,EAFwB,KAElBC,EAFkB,OAImBvB,YAChDqF,GACA,CACEnF,QADF,SACUC,KACRK,eAAgB,CACd,CACEC,MAAOC,GACPH,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,KAE5D,CACEU,MAAOE,EACPJ,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,QAfnC,mBAIxBuF,EAJwB,KAqB/B,OArB+B,KAIX1D,QAiBQ,yCAE1B,6BACE,kBAACf,EAAA,EAAD,CAAQ0E,SAAS,OAAOC,QAAQ,QAAQzE,QAAS,kBAAMQ,GAAQ,KAC7D,kBAACV,EAAA,EAAOpB,QAAR,CAAgBgG,SAAO,GAAvB,QAEA,kBAAC5E,EAAA,EAAOpB,QAAR,CAAgBiG,QAAM,GACpB,kBAACC,EAAA,EAAD,CAAMnC,KAAK,8BAGf,kBAACoC,EAAA,EAAD,CAAOC,OAAO,WAAWvE,KAAMA,EAAMwE,QAAS,kBAAMvE,GAAQ,KAC1D,kBAACqE,EAAA,EAAMlG,OAAP,mBAA0BqD,EAAQS,MAClC,kBAACoC,EAAA,EAAMnG,QAAP,CAAesG,OAAK,GAClB,kBAACzG,EAAA,EAAD,CAAO0G,SAAO,EAACC,KAAK,SAAS3C,IAAKP,EAAQQ,WAC1C,kBAACqC,EAAA,EAAMM,YAAP,KACE,kBAACxG,EAAA,EAAD,KAASqD,EAAQS,MAChBT,EAAQoD,UACP,uEACE,KACJ,2BACE,8CACCpD,EAAQU,UAEX,2BACE,2CADF,IAC4BV,EAAQC,OAEpC,2BACE,yDACCD,EAAQW,eAIf,kBAACkC,EAAA,EAAMQ,QAAP,KACE,kBAACvF,EAAA,EAAD,CAAQ1B,MAAM,QAAQ4B,QAAS,kBAAMQ,GAAQ,KAA7C,qBAGCkB,EAAQhH,KACPsH,EAAQsD,OACN,kBAACxF,EAAA,EAAD,CACE1B,MAAM,OACN8F,GAAIqB,IACJC,GAAG,QACHxF,QAAS0B,EAAQxE,SAEjB,kBAAC0H,EAAA,EAAD,CAAMnC,KAAK,SANb,WAUA,kBAAC3C,EAAA,EAAD,CACEE,QAAS,WACPuE,EAAU,CACR/E,UAAW,CACTR,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,KAC7C1C,UAAW0F,EAAQF,OAGvBtB,GAAQ,KAGV,kBAACoE,EAAA,EAAD,CAAMnC,KAAK,SAXb,eAgBF,kBAAC3C,EAAA,EAAD,CAAQoE,GAAIqB,IAAMC,GAAG,SAASxF,QAAS0B,EAAQ3E,UAC7C,kBAAC6H,EAAA,EAAD,CAAMnC,KAAK,SADb,mC,gOCwCGgD,OAjHf,YAAiC,IAAbC,EAAY,EAAZA,SACZhE,EAAU3C,qBAAWrD,GADG,EAGoBuD,YAChDqF,GACA,CACEnF,QADF,SACUC,KACRK,eAAgB,CACd,CACEC,MAAOC,GACPH,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,KAE5D,CACEU,MAAOE,EACPJ,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,QAdpC,mBAGvBuF,EAHuB,KAsB9B,OAtB8B,KAGV1D,QAoBlB,oCACE,kBAACpD,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAACC,YAAa,EAAGC,WAAS,GAC3C6H,GACCA,EAASvB,KAAI,SAACnC,GAAD,OACX,kBAACvE,EAAA,EAAD,CAAMQ,IAAK+D,EAAQF,KACjB,kBAAC5D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,MAAM,OAAOC,QAAM,GACvB2D,EAAQU,UAEX,kBAACnE,EAAA,EAAD,CAAOgE,IAAKP,EAAQQ,WACpB,kBAAC/D,EAAA,EAAD,MACA,kBAAChB,EAAA,EAAKiB,QAAN,KACE,kBAACjB,EAAA,EAAKkB,OAAN,KAAcqD,EAAQS,MACtB,kBAAChF,EAAA,EAAK2F,KAAN,KACE,0BAAM9B,UAAU,SAAhB,IAA0BU,EAAQC,SAGtC,kBAACxD,EAAA,EAAD,MACA,kBAAChB,EAAA,EAAKiB,QAAN,CAAc4E,OAAK,GACjB,kBAACpB,EAAA,EAAD,CAAMyD,QAAQ,cACZ,kBAACzD,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB,kBAACH,EAAA,EAAKI,OAAN,KACGZ,EAAQhH,KACPsH,EAAQsD,OACN,kBAACM,GAAA,EAAD,CACEC,SAAS,aACTC,QAAQ,UACRC,QACE,kBAACjG,EAAA,EAAD,CACE1B,MAAM,OACN8F,GAAIqB,IACJC,GAAG,QACHxF,QAAS0B,EAAQxE,SAEjB,kBAAC0H,EAAA,EAAD,CAAMnC,KAAK,YAKjB,kBAACmD,GAAA,EAAD,CACEC,SAAS,aACTC,QAAQ,cACRC,QACE,kBAACjG,EAAA,EAAD,CACEE,QAAS,WACPuE,EAAU,CACR/E,UAAW,CACTR,OAAQ0C,EAAQhH,KACZgH,EAAQhH,KAAKsE,OACb,KACJ1C,UAAW0F,EAAQF,SAKzB,kBAAC8C,EAAA,EAAD,CAAMnC,KAAK,YAMnB,kBAACmD,GAAA,EAAD,CACEC,SAAS,aACTC,QAAQ,8BACRC,QACE,kBAACjG,EAAA,EAAD,CACEoE,GAAIqB,IACJC,GAAG,SACHxF,QAAS0B,EAAQ3E,UAEjB,kBAAC6H,EAAA,EAAD,CAAMnC,KAAK,aAMrB,kBAACP,EAAA,EAAKI,OAAN,KACE,kBAAC,EAAD,CAAYN,QAASA,gBAehCsC,GAAuBrE,IAAH,M,gTCpHlB+F,OAdf,WACE,IAAMtE,EAAU3C,qBAAWrD,GADb,EAEmB+H,YAAS9D,GAA0B,CAClEH,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,MADpD6B,EAFM,EAENA,QAAS6C,EAFH,EAEGA,MAAOC,EAFV,EAEUA,KAGxB,OAAI9C,EAAgB,kBAAC,EAAD,MAChB6C,EAAa,UAAN,OAAiBA,EAAME,SAEhC,6BACE,kBAAC,GAAD,CAAU8B,SAAU/B,EAAK+B,aAOlB/F,GAA2BM,IAAH,M,ufCgHtBgG,OA/Hf,WACE,IAAMvE,EAAU3C,qBAAWrD,GADP,EAEI4E,oBAAS,GAFb,mBAEbC,EAFa,KAEPC,EAFO,OAGUF,mBAAS,CACrCmC,KAAM,GACNC,SAAU,GACVT,MAAO,GACPU,YAAa,GACbH,SAAU,KARQ,mBAGb0D,EAHa,KAGJC,EAHI,OAWkClH,YACpDmH,GACA,CACEjH,QADF,SACUC,KACRK,eAAgB,CACd,CACEC,MAAOC,GACPH,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,QAlB9C,mBAWbqH,EAXa,KAWaC,EAXb,KAWIzF,QAalB0F,EAAiB,SAACC,GACtBL,EAAW,2BAAKD,GAAN,kBAAgBM,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpK,UAiBrD,OACE,6BACE,kBAACwI,EAAA,EAAD,CACEkB,QACE,kBAACjG,EAAA,EAAD,CAAQ1B,MAAM,OAAO4B,QAAS,kBAAMQ,GAAQ,KAC1C,kBAACoE,EAAA,EAAD,CAAMnC,KAAK,QADb,eAKFlC,KAAMA,EACNwE,QAAS,kBAAMvE,GAAQ,IACvBsE,OAAO,YAEP,kBAACD,EAAA,EAAMlG,OAAP,0BAEA,kBAACkG,EAAA,EAAMM,YAAP,KACE,kBAACjD,EAAA,EAAD,CAAMC,UAAQ,EAACE,QAAS,GACtB,kBAACH,EAAA,EAAKI,OAAN,KACE,wBAAIY,MAAO,CAAEwD,WAAY,YACzB,kBAACC,GAAA,EAAD,CACEC,SAlCS,WACrBV,EAAQW,UAAYnF,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,GACzDK,QAAQC,IAAI4G,GACZG,EAAc,CAAE7G,UAAW0G,IAC3BC,EAAW,CACT1D,KAAM,GACNC,SAAU,GACVT,MAAO,GACPU,YAAa,GACbH,SAAU,KAEZhC,GAAQ,IAwBIc,UAAWgF,EAAkB,UAAY,IAEzC,kBAACK,GAAA,EAAKG,MAAN,KACE,uCACA,2BACEC,YAAY,UACZtE,KAAK,OACLpG,MAAO6J,EAAQzD,KACfuE,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,4CACA,2BACEC,YAAY,eACZtE,KAAK,WACLpG,MAAO6J,EAAQxD,SACfsE,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,wCACA,2BACEC,YAAY,WACZtE,KAAK,QACLpG,MAAO6J,EAAQjE,MACf+E,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,8CACA,2BACEC,YAAY,iBACZtE,KAAK,cACLpG,MAAO6J,EAAQvD,YACfqE,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,6CACA,2BACEC,YAAY,gBACZtE,KAAK,WACLpG,MAAO6J,EAAQ1D,SACfwE,SAAUT,KAGd,wBAAIrD,MAAO,CAAEwD,WAAY,YACzB,kBAAC5G,EAAA,EAAD,CAAQ1B,MAAM,OAAOjC,KAAK,UAA1B,UAGA,kBAAC2D,EAAA,EAAD,CAAQ1B,MAAM,QAAQ4B,QAAS,kBAAMQ,GAAQ,KAA7C,qBAGA,wBAAI0C,MAAO,CAAEwD,WAAY,mBAYnCN,GAA0BnG,IAAH,M,UCvBdgH,OAzGf,WACE,IAAMvF,EAAU3C,qBAAWrD,GACrB0E,EAAUC,cAFA,EAGQC,oBAAS,GAHjB,mBAGTC,EAHS,KAGHC,EAHG,KAWV0G,EACJ,kBAACC,GAAA,EAAD,CAAMjC,KAAK,UAAU9G,MAAM,OAAOgJ,UAAQ,GACxC,kBAACD,GAAA,EAAKE,KAAN,CACE5E,KAAK,OACL6E,OAA4B,SAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQ5E,QACjBoH,GAAIqB,IACJC,GAAG,KAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,aAPb,SAWA,kBAAC0E,GAAA,EAAKA,KAAN,CAAWtB,SAAS,SAClB,kBAACsB,GAAA,EAAKE,KAAN,CACE5E,KAAK,QACL6E,OAA4B,UAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQ3E,SACjBmH,GAAIqB,IACJC,GAAG,UAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,SAPb,SAUA,kBAAC0E,GAAA,EAAKE,KAAN,CACE5E,KAAK,SACL6E,OAA4B,WAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQ1E,UACjBkH,GAAIqB,IACJC,GAAG,WAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,WAPb,YAcA8E,EACJ,kBAACJ,GAAA,EAAD,CAAMjC,KAAK,UAAU9G,MAAM,OAAOgJ,UAAQ,GACxC,kBAACD,GAAA,EAAKE,KAAN,CACE5E,KAAK,OACL6E,OAA4B,SAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQ5E,QACjBoH,GAAIqB,IACJC,GAAG,KAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,aAPb,SAWA,kBAAC0E,GAAA,EAAKA,KAAN,CAAWtB,SAAS,SAClB,kBAACsB,GAAA,EAAKE,KAAN,CAAW5E,KAAK,OACd,kBAAC,GAAD,OAEF,kBAAC0E,GAAA,EAAKE,KAAN,CACE5E,KAAK,SACL6E,OAA4B,WAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQzE,UACjBiH,GAAIqB,IACJC,GAAG,WAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,kBAPb,UAUA,kBAAC0E,GAAA,EAAKE,KAAN,CACE5E,KAAK,OACL6E,OAA4B,SAApB5F,EAAQ/G,QAChBqF,QAAS0B,EAAQxE,QACjBgH,GAAIqB,IACJC,GAAG,SAEH,kBAACZ,EAAA,EAAD,CAAMnC,KAAK,SAPb,QAUA,kBAAC0E,GAAA,EAAKE,KAAN,CAAW5E,KAAK,UAAUzC,QAAS,kBAAMQ,GAAQ,KAC/C,kBAACoE,EAAA,EAAD,CAAMnC,KAAK,YADb,YAON,OACE,oCACGf,EAAQhH,KAAO6M,EAAUL,EAC1B,kBAACnG,EAAA,EAAD,CACER,KAAMA,EACNW,SAAU,kBAAMV,GAAQ,IACxBW,UA/FgB,WACpBO,EAAQ3F,SACR2F,EAAQ3E,WACRyD,GAAQ,GACRJ,EAAQiB,KAAK,e,UCAFmG,OAbf,YAAuD,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,8BAC5CjN,EAASqE,qBAAWrD,GAApBhB,KAER,OACE,kBAAC,IAAD,iBACMiN,EADN,CAEEC,OAAQ,SAAClL,GAAD,OACNhC,EAAO,kBAAC,IAAD,CAAU8K,GAAG,MAAS,kBAACiC,EAAc/K,QCMrC8K,OAbf,YAAuD,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,8BAC5CjN,EAASqE,qBAAWrD,GAApBhB,KAER,OACE,kBAAC,IAAD,iBACMiN,EADN,CAEEC,OAAQ,SAAClL,GAAD,OACNhC,EAAO,kBAAC+M,EAAc/K,GAAY,kBAAC,IAAD,CAAU8I,GAAG,gB,qOCwEvD,IAAMqC,GAAsB5H,IAAH,MASV6H,GArFf,WACE,IAAMpG,EAAU3C,qBAAWrD,GACrB0E,EAAUC,cAFD,EAGuBC,mBAAS,CAC7CyH,MAAO,GACPC,SAAU,KALG,mBAGRC,EAHQ,KAGKC,EAHL,OAOa5H,mBAAS,IAPtB,mBAOR6H,EAPQ,KAOAC,EAPA,OASmCnJ,YAChD4I,GACA,CACEnH,OADF,SACS5C,EAAGuK,GACR3G,EAAQ7F,MAAMwM,EAAO1E,KAAK9H,OAC1BuE,EAAQiB,KAAK,KACbK,EAAQ5E,WAEV0C,UAAWyI,EACX9I,QAPF,SAOUC,GACNgJ,EAAUhJ,EAAIG,cAAc,GAAG+I,WAAWH,WAnBjC,mBASRI,EATQ,KAScjC,EATd,KASKzF,QAed0F,EAAiB,SAACC,GACtB0B,EAAe,2BAAKD,GAAN,kBAAoBzB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpK,UAO7D,OACE,kBAAC6F,EAAA,EAAD,CAAMC,UAAQ,EAACE,QAAS,GACtB,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAACqE,GAAA,EAAD,CACEC,SARa,SAACJ,GACpBA,EAAEgC,iBACFD,KAOMjH,UAAWgF,EAAkB,UAAY,IAEzC,kBAACK,GAAA,EAAKG,MAAN,KACE,wCACA,2BACEC,YAAY,UACZtE,KAAK,QACLpG,MAAO4L,EAAYF,MACnBf,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,2CACA,2BACE3K,KAAK,WACL4K,YAAY,aACZtE,KAAK,WACLpG,MAAO4L,EAAYD,SACnBhB,SAAUT,KAGd,kBAACzG,EAAA,EAAD,CAAQ1B,MAAM,OAAOjC,KAAK,UAA1B,UAID0H,OAAOC,KAAKqE,GAAQtJ,OAAS,GAC5B,yBAAKyC,UAAU,oBACb,wBAAIA,UAAU,QACXuC,OAAO4E,OAAON,GAAQhE,KAAI,SAAC9H,GAAD,OACzB,wBAAI4B,IAAK5B,GAAQA,W,saCiCjC,IAAMqM,GAAyBzI,IAAH,MAqBb0I,GAxHf,WACE,IAAMjH,EAAU3C,qBAAWrD,GAErB0E,EAAUC,cAHA,EAKkBC,mBAAS,CACzCsI,SAAU,GACVb,MAAO,GACPC,SAAU,GACVa,gBAAiB,KATH,mBAKTC,EALS,KAKEC,EALF,OAWYzI,mBAAS,IAXrB,mBAWT6H,EAXS,KAWDC,EAXC,OAaqCnJ,YACnDyJ,GACA,CACEhI,OADF,SACS5C,EAAGuK,GACR3G,EAAQ7F,MAAMwM,EAAO1E,KAAKqF,cAC1B5I,EAAQiB,KAAK,KACbK,EAAQ5E,WAEV0C,UAAWsJ,EACX3J,QAPF,SAOUC,GACNgJ,EAAUhJ,EAAIG,cAAc,GAAG+I,WAAWH,WAvBhC,mBAaTa,EAbS,KAagB1C,EAbhB,KAaOzF,QAejB0F,EAAiB,SAACC,GACtBuC,EAAa,2BAAKD,GAAN,kBAAkBtC,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpK,UAOzD,OACE,kBAAC6F,EAAA,EAAD,CAAMC,UAAQ,EAACE,QAAS,GACtB,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAACqE,GAAA,EAAD,CACEC,SARa,SAACJ,GACpBA,EAAEgC,iBACFQ,KAOM1H,UAAWgF,EAAkB,UAAY,IAEzC,kBAACK,GAAA,EAAKG,MAAN,KACE,2CACA,2BACEC,YAAY,aACZtE,KAAK,WACLpG,MAAOyM,EAAUF,SACjB5B,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,wCACA,2BACEC,YAAY,UACZtE,KAAK,QACLpG,MAAOyM,EAAUf,MACjBf,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,2CACA,2BACE3K,KAAK,WACL4K,YAAY,aACZtE,KAAK,WACLpG,MAAOyM,EAAUd,SACjBhB,SAAUT,KAGd,kBAACI,GAAA,EAAKG,MAAN,KACE,mDACA,2BACE3K,KAAK,WACL4K,YAAY,qBACZtE,KAAK,kBACLpG,MAAOyM,EAAUD,gBACjB7B,SAAUT,KAGd,kBAACzG,EAAA,EAAD,CAAQ1B,MAAM,OAAOjC,KAAK,UAA1B,WAID0H,OAAOC,KAAKqE,GAAQtJ,OAAS,GAC5B,yBAAKyC,UAAU,oBACb,wBAAIA,UAAU,QACXuC,OAAO4E,OAAON,GAAQhE,KAAI,SAAC9H,GAAD,OACzB,wBAAI4B,IAAK5B,GAAQA,W,wUC7ClB4M,OA5Cf,WACE,IAAMvH,EAAU3C,qBAAWrD,GADX,EAEiB+H,YAASyF,GAAwB,CAChE1J,UAAW,CAAER,OAAQ0C,EAAQhH,KAAOgH,EAAQhH,KAAKsE,OAAS,MADpD6B,EAFQ,EAERA,QAAS6C,EAFD,EAECA,MAAOC,EAFR,EAEQA,KAIxB,OAAI9C,EAAgB,0CAEhB6C,EAAa,UAAN,OAAiBA,EAAME,SAGhC,6BACE,gDACA,kBAACuF,GAAA,EAAD,CAAO/K,MAAM,OAAOH,IAAI,OAAOmJ,UAAQ,GACrC,kBAAC+B,GAAA,EAAMxK,OAAP,KACE,kBAACwK,GAAA,EAAM/G,IAAP,KACE,kBAAC+G,GAAA,EAAMC,WAAP,cACA,kBAACD,GAAA,EAAMC,WAAP,aACA,kBAACD,GAAA,EAAMC,WAAP,aACA,kBAACD,GAAA,EAAMC,WAAP,cACA,kBAACD,GAAA,EAAMC,WAAP,iBACA,kBAACD,GAAA,EAAMC,WAAP,sBAIJ,kBAACD,GAAA,EAAME,KAAP,KACG1F,EAAK2F,OAAOnF,KAAI,SAACoF,GAAD,OACf,kBAACJ,GAAA,EAAM/G,IAAP,CAAWnE,IAAKsL,EAAMzH,KACpB,kBAACqH,GAAA,EAAMK,KAAP,KACE,kBAACjL,EAAA,EAAD,CAAOgE,IAAKgH,EAAMvH,QAAQQ,SAAU0C,KAAK,UAE3C,kBAACiE,GAAA,EAAMK,KAAP,KAAaD,EAAMvH,QAAQS,MAC3B,kBAAC0G,GAAA,EAAMK,KAAP,KAAaC,KAAOF,EAAMG,WAAWC,SAAQ,IAC7C,kBAACR,GAAA,EAAMK,KAAP,SAAcD,EAAMvH,QAAQC,OAC5B,kBAACkH,GAAA,EAAMK,KAAP,KAAaD,EAAMvH,QAAQU,UAC3B,kBAACyG,GAAA,EAAMK,KAAP,KAAaD,EAAMvH,QAAQW,qBAW5BuG,GAAyBjJ,IAAH,M,mBChBpB2J,OAnBf,WACE,OACE,oCACE,kBAACnN,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAACoN,GAAA,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC9O,KAAK,IAAI0M,UAAW1B,KACjC,kBAAC,GAAD,CAAW8D,OAAK,EAAC9O,KAAK,SAAS0M,UAAWI,KAC1C,kBAAC,GAAD,CAAWgC,OAAK,EAAC9O,KAAK,UAAU0M,UAAWiB,KAC3C,kBAACoB,GAAD,CAAWD,OAAK,EAAC9O,KAAK,UAAU0M,UAAWuB,KAC3C,kBAACc,GAAD,CAAWD,OAAK,EAAC9O,KAAK,QAAQ0M,UAAWlE,S,iDCpB/CwG,GAAW,IAAIC,KAAS,CAC5BC,IAAK,8DAGDC,GAAW,IAAIC,MAAW,SAACC,EAAWC,GAE1C,IAAMlN,EAAQlC,aAAaC,QAAQ,YAUnC,OAPAkP,EAAUE,WAAW,CACnBC,QAAS,CACPC,cAAerN,EAAK,iBAAaA,GAAU,MAKxCkN,EAAQD,MAGXK,GAAS,IAAIC,KAAa,CAC9BC,KAAMT,GAASU,OAAOb,IACtBc,MAAO,IAAIC,OAIX,qBAACC,GAAA,EAAD,CAAgBN,OAAQA,IACtB,kBAAC,GAAD,OCxBgBO,QACW,cAA7BnQ,OAAOC,SAASmQ,UAEe,UAA7BpQ,OAAOC,SAASmQ,UAEhBpQ,OAAOC,SAASmQ,SAASC,MACvB,2DCdNC,IAASxD,OAAOoD,GAAgBK,SAASC,eAAe,SD+HlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnI,GACLrE,QAAQqE,MAAMA,EAAME,c","file":"static/js/main.5fb4640e.chunk.js","sourcesContent":["import React, { useReducer, createContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nconst initialState = {\n  user: null,\n  navItem: \"home\",\n  cartTotal: 0,\n};\n\nconst pathname = window.location.pathname;\nconst path = pathname === \"/\" ? \"home\" : pathname.substring(1);\ninitialState.navItem = path;\n\nif (localStorage.getItem(\"jwtToken\")) {\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  navItem: \"home\",\n  cartTotal: 0,\n  cartProductsIds: [],\n  login: (userData) => {},\n  logout: () => {},\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: null,\n      };\n    case \"NAV\":\n      return {\n        ...state,\n        navItem: action.payload,\n      };\n    case \"INIT_CART\":\n      return {\n        ...state,\n        cartTotal: 0,\n        cartProductsIds: [],\n      };\n    case \"CART\":\n      return {\n        ...state,\n        cartTotal: state.cartTotal + action.payload.value,\n        cartProductsIds: [...state.cartProductsIds, action.payload.productId],\n      };\n    case \"REM_CART\":\n      return {\n        ...state,\n        cartProductsIds: state.cartProductsIds.filter(\n          (id) => id !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData,\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    dispatch({ type: \"LOGOUT\" });\n  }\n\n  function setHome() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"home\",\n    });\n  }\n\n  function setLogin() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"login\",\n    });\n  }\n\n  function setSignup() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"signup\",\n    });\n  }\n\n  function setOrders() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"orders\",\n    });\n  }\n\n  function setCart() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"cart\",\n    });\n  }\n\n  function updateCartTotal(value, productId) {\n    dispatch({\n      type: \"CART\",\n      payload: { value, productId },\n    });\n  }\n\n  function initCartTotal() {\n    dispatch({\n      type: \"INIT_CART\",\n    });\n  }\n\n  function removeProductId(productId) {\n    dispatch({\n      type: \"REM_CART\",\n      payload: productId,\n    });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        navItem: state.navItem,\n        cartTotal: state.cartTotal,\n        cartProductsIds: state.cartProductsIds,\n        setHome,\n        setLogin,\n        setSignup,\n        setOrders,\n        setCart,\n        login,\n        logout,\n        initCartTotal,\n        updateCartTotal,\n        removeProductId,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","import React from \"react\";\nimport _ from \"lodash\";\n\n// sem-ui\nimport { Card, Placeholder, Segment, Label, Divider } from \"semantic-ui-react\";\n\nfunction HomePlaceholder() {\n  return (\n    <Card.Group doubling itemsPerRow={4} stackable>\n      {_.times(12, (i) => (\n        <Card key={i}>\n          <Segment>\n            <Label color=\"teal\" ribbon>\n              Category\n            </Label>\n            <Placeholder>\n              <Placeholder.Image square />\n            </Placeholder>\n            <Divider />\n            <Card.Content>\n              <Placeholder>\n                <Placeholder.Header>\n                  <Placeholder.Line length=\"medium\" />\n                  <Placeholder.Line length=\"very short\" />\n                </Placeholder.Header>\n              </Placeholder>\n            </Card.Content>\n          </Segment>\n        </Card>\n      ))}\n    </Card.Group>\n  );\n}\n\nexport default HomePlaceholder;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { FETCH_CART_ITEMS_QUERY } from \"../pages/Cart\";\nimport { FETCH_ALL_PRODUCTS_QUERY } from \"../pages/Home\";\n// sem-ui\nimport { Button } from \"semantic-ui-react\";\n\nfunction RemoveFromCartButton({ productId }) {\n  const { user, removeProductId } = useContext(AuthContext);\n  const userId = user ? user.userId : \"\";\n  const [removeFromCart] = useMutation(REMOVE_FROM_CART_MUTATION, {\n    onError(err) {\n      console.log(err.graphQLErrors);\n    },\n    variables: { userId, productId },\n    refetchQueries: [\n      {\n        query: FETCH_ALL_PRODUCTS_QUERY,\n        variables: { userId },\n      },\n      {\n        query: FETCH_CART_ITEMS_QUERY,\n        variables: { userId },\n      },\n    ],\n  });\n\n  return (\n    <div>\n      <Button\n        secondary\n        onClick={() => {\n          removeFromCart();\n          removeProductId(productId);\n        }}\n      >\n        Remove from cart\n      </Button>\n    </div>\n  );\n}\n\nexport default RemoveFromCartButton;\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($userId: String, $productId: String) {\n    removeFromCart(userId: $userId, productId: $productId) {\n      _id\n    }\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\n// import { FETCH_ALL_PRODUCTS_QUERY } from \"../pages/Home\";\n// import { FETCH_ALL_ORDERS_QUERY } from \"../pages/Orders\";\n// import { FETCH_CART_ITEMS_QUERY } from \"../pages/Cart\";\n// sem-ui\nimport { Button, Confirm } from \"semantic-ui-react\";\n\nfunction BuyButton({ type, productsIds }) {\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const { user, cartProductsIds, setOrders } = useContext(AuthContext);\n  const userId = user ? user.userId : \"\";\n  const [checkoutOrders, { loading }] = useMutation(CHECKOUT_ORDERS_MUTATION, {\n    onError(err) {\n      console.log(err.graphQLErrors);\n    },\n    variables: {\n      userId,\n      productsIds: type === \"checkout\" ? cartProductsIds : productsIds,\n    },\n    // refetchQueries: [\n    //   {\n    //     query: FETCH_ALL_PRODUCTS_QUERY,\n    //     variables: { userId },\n    //   },\n    //   {\n    //     query: FETCH_ALL_ORDERS_QUERY,\n    //     variables: { userId },\n    //   },\n    // ],\n    update(_, __) {\n      // const data = cache.readQuery({\n      //   query: FETCH_CART_ITEMS_QUERY,\n      //   variables: { userId },\n      // });\n      // const newData = data.cartItems.filter(\n      //   (item) => !productsIds.includes(item.product._id)\n      // );\n      // cache.writeQuery({\n      //   query: FETCH_CART_ITEMS_QUERY,\n      //   variables: { userId },\n      //   data: newData,\n      // });\n    },\n  });\n\n  const handleBuyButton = () => {\n    checkoutOrders();\n    setOpen(false);\n    window.location.reload(false);\n    if (type === \"checkout\") {\n      history.push(\"/orders\");\n      setOrders();\n    }\n  };\n\n  return (\n    <div>\n      {type === \"only\" ? (\n        <Button primary onClick={() => setOpen(true)}>\n          Buy only this\n        </Button>\n      ) : (\n        <Button color=\"orange\" onClick={() => setOpen(true)}>\n          Member Checkout\n        </Button>\n      )}\n      <Confirm\n        open={open}\n        cancelButton=\"I changed my mind\"\n        confirmButton=\"Let's do it\"\n        onCancel={() => setOpen(false)}\n        onConfirm={handleBuyButton}\n        className={loading ? \"loading\" : \"\"}\n      />\n    </div>\n  );\n}\n\nexport default BuyButton;\n\nconst CHECKOUT_ORDERS_MUTATION = gql`\n  mutation checkoutOrders($userId: String, $productsIds: [String]) {\n    checkoutOrders(userId: $userId, productsIds: $productsIds)\n  }\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../context/auth\";\n\n// components\nimport RemoveFromCartButton from \"./RemoveFromCartButton\";\nimport BuyButton from \"./BuyButton\";\n\n// sem-ui\nimport { Image, Grid, Button, Header } from \"semantic-ui-react\";\n\nfunction CartItem({ cartItem, firstItem }) {\n  const context = useContext(AuthContext);\n\n  const [count, setCount] = useState(1);\n\n  useEffect(() => {\n    if (cartItem._id === firstItem) {\n      context.initCartTotal();\n    }\n    context.updateCartTotal(\n      count * parseInt(cartItem.product.price),\n      cartItem.product._id\n    );\n  }, []);\n\n  return (\n    <div>\n      <Grid centered>\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Image src={cartItem.product.imageUrl} />\n          </Grid.Column>\n          <Grid.Column>\n            <Header>{cartItem.product.name}</Header>\n            <span>Catergory: {cartItem.product.category}</span>\n            <br />\n            <span>{cartItem.product.description}</span>\n            <br />\n            <br />\n            <div>\n              <Header sub>Total Price</Header>\n              <span>${count * parseInt(cartItem.product.price)}</span>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1}>\n          <BuyButton type=\"only\" productsIds={[cartItem.product._id]} />\n          <Button\n            basic\n            color=\"red\"\n            icon=\"angle down\"\n            onClick={() => {\n              if (count === 1) {\n                setCount(count);\n              } else {\n                setCount((prevCount) => prevCount - 1);\n                context.updateCartTotal(-parseInt(cartItem.product.price));\n              }\n            }}\n          />\n          <Button basic color=\"blue\">\n            {count}\n          </Button>\n          <Button\n            basic\n            color=\"green\"\n            icon=\"angle up\"\n            onClick={() => {\n              setCount((prevCount) => prevCount + 1);\n              context.updateCartTotal(parseInt(cartItem.product.price));\n            }}\n          />\n          <RemoveFromCartButton productId={cartItem.product._id} />\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth\";\n// components\nimport BuyButton from \"./BuyButton\";\n// sem-ui\nimport { Card, Grid } from \"semantic-ui-react\";\n\nfunction OrderSummary() {\n  const context = useContext(AuthContext);\n  return (\n    <Card fluid style={{ backgroundColor: \"black\" }}>\n      <Card.Content>\n        <Card.Header style={{ color: \"white\" }}>Summary</Card.Header>\n        <br />\n        <Card.Meta style={{ color: \"white\" }}>\n          <Grid columns=\"equal\">\n            <Grid.Column>Subtotal</Grid.Column>\n            <Grid.Column width={8}></Grid.Column>\n            <Grid.Column>${context.cartTotal}</Grid.Column>\n          </Grid>\n        </Card.Meta>\n        <Card.Meta style={{ color: \"white\" }}>\n          <Grid columns=\"equal\">\n            <Grid.Column>Shipping</Grid.Column>\n            <Grid.Column width={8}></Grid.Column>\n            <Grid.Column>$0</Grid.Column>\n          </Grid>\n        </Card.Meta>\n        <br />\n        <Card.Header style={{ color: \"white\" }}>\n          <Grid columns=\"equal\">\n            <Grid.Column>Total</Grid.Column>\n            <Grid.Column width={7}></Grid.Column>\n            <Grid.Column>${context.cartTotal}</Grid.Column>\n          </Grid>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div style={{ margin: \"auto\" }}>\n          <BuyButton type=\"checkout\" />\n        </div>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default OrderSummary;\n","import React, { useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\n\n// components\nimport CartItem from \"../components/CartItem\";\nimport OrderSummary from \"../components/OrderSummary\";\n// sem-ui\nimport { Grid, Segment, Label, Divider } from \"semantic-ui-react\";\n\nfunction Cart() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_CART_ITEMS_QUERY, {\n    variables: { userId: context.user ? context.user.userId : \"\" },\n  });\n\n  if (loading) return <h1>Loading...</h1>;\n\n  if (error) return `Error! ${error.message}`;\n\n  if (Object.keys(data.cartItems).length < 1) {\n    return <h1>Cart is empty</h1>;\n  }\n  const firstItem = data.cartItems[0]._id;\n\n  return (\n    <div>\n      <Grid columns={2} centered>\n        <Grid.Row verticalAlign=\"top\">\n          <Grid.Column width=\"10\">\n            <Segment raised>\n              <Label as=\"a\" color=\"red\" ribbon>\n                Shopping Bag\n              </Label>\n              {data.cartItems.map((item) => (\n                <div key={item._id}>\n                  <br />\n                  <CartItem cartItem={item} firstItem={firstItem} />\n                  <Divider />\n                </div>\n              ))}\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Segment raised>\n              <Label as=\"a\" color=\"orange\" ribbon>\n                Order Summary\n              </Label>\n              <div>\n                <br />\n                <OrderSummary />\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Cart;\n\nexport const FETCH_CART_ITEMS_QUERY = gql`\n  query($userId: String) {\n    cartItems(userId: $userId) {\n      _id\n      createdAt\n      product {\n        _id\n        name\n        category\n        price\n        description\n        imageUrl\n      }\n    }\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\nimport { Link } from \"react-router-dom\";\n// graphql\nimport { ADD_TO_CART_MUTATION } from \"./Products\";\nimport { FETCH_ALL_PRODUCTS_QUERY } from \"../pages/Home\";\nimport { FETCH_CART_ITEMS_QUERY } from \"../pages/Cart\";\n// sem-ui\nimport { Button, Header, Image, Modal, Icon } from \"semantic-ui-react\";\n\nfunction MoreButton({ product }) {\n  const context = useContext(AuthContext);\n  const [open, setOpen] = useState(false);\n\n  const [addToCart, { loading: mutationLoading }] = useMutation(\n    ADD_TO_CART_MUTATION,\n    {\n      onError(err) {},\n      refetchQueries: [\n        {\n          query: FETCH_ALL_PRODUCTS_QUERY,\n          variables: { userId: context.user ? context.user.userId : \"\" },\n        },\n        {\n          query: FETCH_CART_ITEMS_QUERY,\n          variables: { userId: context.user ? context.user.userId : \"\" },\n        },\n      ],\n    }\n  );\n\n  if (mutationLoading) return <h1>Loading..</h1>;\n  return (\n    <div>\n      <Button animated=\"fade\" floated=\"right\" onClick={() => setOpen(true)}>\n        <Button.Content visible>More</Button.Content>\n\n        <Button.Content hidden>\n          <Icon name=\"expand arrows alternate\" />\n        </Button.Content>\n      </Button>\n      <Modal dimmer=\"blurring\" open={open} onClose={() => setOpen(false)}>\n        <Modal.Header>More about {product.name}</Modal.Header>\n        <Modal.Content image>\n          <Image wrapped size=\"medium\" src={product.imageUrl} />\n          <Modal.Description>\n            <Header>{product.name}</Header>\n            {product.isOrdered ? (\n              <p>You have previously ordered this product</p>\n            ) : null}\n            <p>\n              <strong>Category: </strong>\n              {product.category}\n            </p>\n            <p>\n              <strong>Price: </strong>${product.price}\n            </p>\n            <p>\n              <strong>Product Description: </strong>\n              {product.description}\n            </p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Continue Shopping\n          </Button>\n          {context.user ? (\n            product.inCart ? (\n              <Button\n                color=\"teal\"\n                as={Link}\n                to=\"/cart\"\n                onClick={context.setCart}\n              >\n                <Icon name=\"cart\" />\n                In Cart\n              </Button>\n            ) : (\n              <Button\n                onClick={() => {\n                  addToCart({\n                    variables: {\n                      userId: context.user ? context.user.userId : null,\n                      productId: product._id,\n                    },\n                  });\n                  setOpen(false);\n                }}\n              >\n                <Icon name=\"cart\" />\n                Add to Cart\n              </Button>\n            )\n          ) : (\n            <Button as={Link} to=\"/login\" onClick={context.setLogin}>\n              <Icon name=\"cart\" />\n              Login/Signup to add to cart\n            </Button>\n          )}\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n}\n\nexport default MoreButton;\n","import React, { useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\nimport { Link } from \"react-router-dom\";\n// graphql\nimport { FETCH_ALL_PRODUCTS_QUERY } from \"../pages/Home\";\nimport { FETCH_CART_ITEMS_QUERY } from \"../pages/Cart\";\n// component\nimport MoreButton from \"./MoreButton\";\n// sem-ui\nimport {\n  Card,\n  Segment,\n  Label,\n  Divider,\n  Image,\n  Popup,\n  Button,\n  Grid,\n  Icon,\n} from \"semantic-ui-react\";\n\nfunction Products({ products }) {\n  const context = useContext(AuthContext);\n\n  const [addToCart, { loading: mutationLoading }] = useMutation(\n    ADD_TO_CART_MUTATION,\n    {\n      onError(err) {},\n      refetchQueries: [\n        {\n          query: FETCH_ALL_PRODUCTS_QUERY,\n          variables: { userId: context.user ? context.user.userId : \"\" },\n        },\n        {\n          query: FETCH_CART_ITEMS_QUERY,\n          variables: { userId: context.user ? context.user.userId : \"\" },\n        },\n      ],\n    }\n  );\n  if (mutationLoading) {\n  }\n\n  return (\n    <>\n      <Card.Group doubling itemsPerRow={4} stackable>\n        {products &&\n          products.map((product) => (\n            <Card key={product._id}>\n              <Segment>\n                <Label color=\"teal\" ribbon>\n                  {product.category}\n                </Label>\n                <Image src={product.imageUrl} />\n                <Divider />\n                <Card.Content>\n                  <Card.Header>{product.name}</Card.Header>\n                  <Card.Meta>\n                    <span className=\"price\">${product.price}</span>\n                  </Card.Meta>\n                </Card.Content>\n                <Divider />\n                <Card.Content extra>\n                  <Grid divided=\"vertically\">\n                    <Grid.Row columns={2}>\n                      <Grid.Column>\n                        {context.user ? (\n                          product.inCart ? (\n                            <Popup\n                              position=\"top center\"\n                              content=\"In cart\"\n                              trigger={\n                                <Button\n                                  color=\"teal\"\n                                  as={Link}\n                                  to=\"/cart\"\n                                  onClick={context.setCart}\n                                >\n                                  <Icon name=\"cart\" />\n                                </Button>\n                              }\n                            />\n                          ) : (\n                            <Popup\n                              position=\"top center\"\n                              content=\"Add to cart\"\n                              trigger={\n                                <Button\n                                  onClick={() => {\n                                    addToCart({\n                                      variables: {\n                                        userId: context.user\n                                          ? context.user.userId\n                                          : null,\n                                        productId: product._id,\n                                      },\n                                    });\n                                  }}\n                                >\n                                  <Icon name=\"cart\" />\n                                </Button>\n                              }\n                            />\n                          )\n                        ) : (\n                          <Popup\n                            position=\"top center\"\n                            content=\"Login/Signup to add to cart\"\n                            trigger={\n                              <Button\n                                as={Link}\n                                to=\"/login\"\n                                onClick={context.setLogin}\n                              >\n                                <Icon name=\"cart\" />\n                              </Button>\n                            }\n                          />\n                        )}\n                      </Grid.Column>\n                      <Grid.Column>\n                        <MoreButton product={product} />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Card.Content>\n              </Segment>\n            </Card>\n          ))}\n      </Card.Group>\n    </>\n  );\n}\n\nexport default Products;\n\nexport const ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($userId: String, $productId: String) {\n    addToCart(userId: $userId, productId: $productId) {\n      _id\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\n// components\nimport HomePlaceholder from \"../components/HomePlaceholder\";\nimport Products from \"../components/Products\";\n\nfunction Home() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_ALL_PRODUCTS_QUERY, {\n    variables: { userId: context.user ? context.user.userId : \"\" },\n  });\n  if (loading) return <HomePlaceholder />;\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <Products products={data.products} />\n    </div>\n  );\n}\n\nexport default Home;\n\nexport const FETCH_ALL_PRODUCTS_QUERY = gql`\n  query products($userId: String) {\n    products(userId: $userId) {\n      _id\n      userId\n      creatorId\n      name\n      category\n      price\n      description\n      imageUrl\n      inCart\n      isOrdered\n    }\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\nimport { FETCH_ALL_PRODUCTS_QUERY } from \"../pages/Home\";\n\n// sem-ui\nimport { Icon, Button, Modal, Form, Grid } from \"semantic-ui-react\";\n\nfunction AddProduct() {\n  const context = useContext(AuthContext);\n  const [open, setOpen] = useState(false);\n  const [prodVal, setProdVal] = useState({\n    name: \"\",\n    category: \"\",\n    price: \"\",\n    description: \"\",\n    imageUrl: \"\",\n  });\n\n  const [createProduct, { loading: mutationLoading }] = useMutation(\n    CREATE_PRODUCT_MUTATION,\n    {\n      onError(err) {},\n      refetchQueries: [\n        {\n          query: FETCH_ALL_PRODUCTS_QUERY,\n          variables: { userId: context.user ? context.user.userId : \"\" },\n        },\n      ],\n    }\n  );\n\n  const handleOnChange = (e) => {\n    setProdVal({ ...prodVal, [e.target.name]: e.target.value });\n  };\n\n  const handleOnSubmit = () => {\n    prodVal.creatorId = context.user ? context.user.userId : \"\";\n    console.log(prodVal);\n    createProduct({ variables: prodVal });\n    setProdVal({\n      name: \"\",\n      category: \"\",\n      price: \"\",\n      description: \"\",\n      imageUrl: \"\",\n    });\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        trigger={\n          <Button color=\"teal\" onClick={() => setOpen(true)}>\n            <Icon name=\"add\" />\n            Add Product\n          </Button>\n        }\n        open={open}\n        onClose={() => setOpen(false)}\n        dimmer=\"inverted\"\n      >\n        <Modal.Header>List your product</Modal.Header>\n\n        <Modal.Description>\n          <Grid centered columns={2}>\n            <Grid.Column>\n              <hr style={{ visibility: \"hidden\" }} />\n              <Form\n                onSubmit={handleOnSubmit}\n                className={mutationLoading ? \"loading\" : \"\"}\n              >\n                <Form.Field>\n                  <label>Name</label>\n                  <input\n                    placeholder=\"Name...\"\n                    name=\"name\"\n                    value={prodVal.name}\n                    onChange={handleOnChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Catergory</label>\n                  <input\n                    placeholder=\"Catergory...\"\n                    name=\"category\"\n                    value={prodVal.category}\n                    onChange={handleOnChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Price</label>\n                  <input\n                    placeholder=\"Price...\"\n                    name=\"price\"\n                    value={prodVal.price}\n                    onChange={handleOnChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Description</label>\n                  <input\n                    placeholder=\"Description...\"\n                    name=\"description\"\n                    value={prodVal.description}\n                    onChange={handleOnChange}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>Image Link</label>\n                  <input\n                    placeholder=\"Image Link...\"\n                    name=\"imageUrl\"\n                    value={prodVal.imageUrl}\n                    onChange={handleOnChange}\n                  />\n                </Form.Field>\n                <hr style={{ visibility: \"hidden\" }} />\n                <Button color=\"teal\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button color=\"black\" onClick={() => setOpen(false)}>\n                  Continue Shopping\n                </Button>\n                <hr style={{ visibility: \"hidden\" }} />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Modal.Description>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AddProduct;\n\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation createProduct(\n    $creatorId: String!\n    $name: String!\n    $category: String!\n    $price: String!\n    $description: String!\n    $imageUrl: String!\n  ) {\n    createProduct(\n      input: {\n        creatorId: $creatorId\n        name: $name\n        category: $category\n        price: $price\n        description: $description\n        imageUrl: $imageUrl\n      }\n    ) {\n      _id\n    }\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport AddProduct from \"./AddProduct\";\n// sem-ui\nimport { Menu, Icon, Confirm } from \"semantic-ui-react\";\n\nfunction NavBar() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const handleConfirm = () => {\n    context.logout();\n    context.setLogin();\n    setOpen(false);\n    history.push(\"/login\");\n  };\n\n  const unAuthNav = (\n    <Menu size=\"massive\" color=\"teal\" inverted>\n      <Menu.Item\n        name=\"Home\"\n        active={context.navItem === \"home\"}\n        onClick={context.setHome}\n        as={Link}\n        to=\"/\"\n      >\n        <Icon name=\"building\" />\n        Store\n      </Menu.Item>\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item\n          name=\"Login\"\n          active={context.navItem === \"login\"}\n          onClick={context.setLogin}\n          as={Link}\n          to=\"/login\"\n        >\n          <Icon name=\"user\" />\n          Login\n        </Menu.Item>\n        <Menu.Item\n          name=\"Signup\"\n          active={context.navItem === \"signup\"}\n          onClick={context.setSignup}\n          as={Link}\n          to=\"/signup\"\n        >\n          <Icon name=\"signup\" />\n          Signup\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  );\n\n  const authNav = (\n    <Menu size=\"massive\" color=\"teal\" inverted>\n      <Menu.Item\n        name=\"Home\"\n        active={context.navItem === \"home\"}\n        onClick={context.setHome}\n        as={Link}\n        to=\"/\"\n      >\n        <Icon name=\"building\" />\n        Store\n      </Menu.Item>\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item name=\"Add\">\n          <AddProduct />\n        </Menu.Item>\n        <Menu.Item\n          name=\"Orders\"\n          active={context.navItem === \"orders\"}\n          onClick={context.setOrders}\n          as={Link}\n          to=\"/orders\"\n        >\n          <Icon name=\"numbered list\" />\n          Orders\n        </Menu.Item>\n        <Menu.Item\n          name=\"Cart\"\n          active={context.navItem === \"cart\"}\n          onClick={context.setCart}\n          as={Link}\n          to=\"/cart\"\n        >\n          <Icon name=\"cart\" />\n          Cart\n        </Menu.Item>\n        <Menu.Item name=\"Log Out\" onClick={() => setOpen(true)}>\n          <Icon name=\"log out\" />\n          Logout\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  );\n  return (\n    <>\n      {context.user ? authNav : unAuthNav}\n      <Confirm\n        open={open}\n        onCancel={() => setOpen(false)}\n        onConfirm={handleConfirm}\n      />\n    </>\n  );\n}\n\nexport default NavBar;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/auth\";\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/auth\";\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;\n","import React, { useContext, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n// sem-ui\nimport { Grid, Form, Button } from \"semantic-ui-react\";\n\nfunction Login() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n  const [loginValues, setLoginValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState({});\n\n  const [loginUser, { loading: mutationLoading }] = useMutation(\n    LOGIN_USER_MUTATION,\n    {\n      update(_, result) {\n        context.login(result.data.login);\n        history.push(\"/\");\n        context.setHome();\n      },\n      variables: loginValues,\n      onError(err) {\n        setErrors(err.graphQLErrors[0].extensions.errors);\n      },\n    }\n  );\n\n  const handleOnChange = (e) => {\n    setLoginValues({ ...loginValues, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginUser();\n  };\n  return (\n    <Grid centered columns={3}>\n      <Grid.Column>\n        <Form\n          onSubmit={handleSubmit}\n          className={mutationLoading ? \"loading\" : \"\"}\n        >\n          <Form.Field>\n            <label>Email</label>\n            <input\n              placeholder=\"Email..\"\n              name=\"email\"\n              value={loginValues.email}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Password..\"\n              name=\"password\"\n              value={loginValues.password}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Button color=\"teal\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        {Object.keys(errors).length > 0 && (\n          <div className=\"ui error message\">\n            <ul className=\"list\">\n              {Object.values(errors).map((value) => (\n                <li key={value}>{value}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst LOGIN_USER_MUTATION = gql`\n  mutation login($email: String!, $password: String!) {\n    login(input: { email: $email, password: $password }) {\n      userId\n      token\n    }\n  }\n`;\n\nexport default Login;\n","import React, { useContext, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n// sem-ui\nimport { Grid, Form, Button } from \"semantic-ui-react\";\n\nfunction Signup() {\n  const context = useContext(AuthContext);\n\n  const history = useHistory();\n\n  const [regValues, setRegValues] = useState({\n    fullname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [errors, setErrors] = useState({});\n\n  const [registerUser, { loading: mutationLoading }] = useMutation(\n    REGISTER_USER_MUTATION,\n    {\n      update(_, result) {\n        context.login(result.data.registerUser);\n        history.push(\"/\");\n        context.setHome();\n      },\n      variables: regValues,\n      onError(err) {\n        setErrors(err.graphQLErrors[0].extensions.errors);\n      },\n    }\n  );\n\n  const handleOnChange = (e) => {\n    setRegValues({ ...regValues, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    registerUser();\n  };\n  return (\n    <Grid centered columns={3}>\n      <Grid.Column>\n        <Form\n          onSubmit={handleSubmit}\n          className={mutationLoading ? \"loading\" : \"\"}\n        >\n          <Form.Field>\n            <label>Fullname</label>\n            <input\n              placeholder=\"Fullname..\"\n              name=\"fullname\"\n              value={regValues.fullname}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <input\n              placeholder=\"Email..\"\n              name=\"email\"\n              value={regValues.email}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Password..\"\n              name=\"password\"\n              value={regValues.password}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password..\"\n              name=\"confirmPassword\"\n              value={regValues.confirmPassword}\n              onChange={handleOnChange}\n            />\n          </Form.Field>\n          <Button color=\"teal\" type=\"submit\">\n            Signup\n          </Button>\n        </Form>\n        {Object.keys(errors).length > 0 && (\n          <div className=\"ui error message\">\n            <ul className=\"list\">\n              {Object.values(errors).map((value) => (\n                <li key={value}>{value}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst REGISTER_USER_MUTATION = gql`\n  mutation registerUser(\n    $fullname: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    registerUser(\n      input: {\n        fullname: $fullname\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      userId\n      token\n    }\n  }\n`;\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\nimport moment from \"moment\";\n// sem-ui\nimport { Table, Image } from \"semantic-ui-react\";\n\nfunction Orders() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_ALL_ORDERS_QUERY, {\n    variables: { userId: context.user ? context.user.userId : \"\" },\n  });\n\n  if (loading) return <h1>Loading...</h1>;\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      <h1>Recent Purchases</h1>\n      <Table color=\"teal\" key=\"teal\" inverted>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Image</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>Price</Table.HeaderCell>\n            <Table.HeaderCell>Category</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {data.orders.map((order) => (\n            <Table.Row key={order._id}>\n              <Table.Cell>\n                <Image src={order.product.imageUrl} size=\"tiny\" />\n              </Table.Cell>\n              <Table.Cell>{order.product.name}</Table.Cell>\n              <Table.Cell>{moment(order.createdAt).fromNow(true)}</Table.Cell>\n              <Table.Cell>${order.product.price}</Table.Cell>\n              <Table.Cell>{order.product.category}</Table.Cell>\n              <Table.Cell>{order.product.description}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\nexport default Orders;\n\nexport const FETCH_ALL_ORDERS_QUERY = gql`\n  query($userId: String) {\n    orders(userId: $userId) {\n      _id\n      createdAt\n      product {\n        _id\n        name\n        category\n        price\n        description\n        imageUrl\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./context/auth\";\n\n// components\nimport NavBar from \"./components/NavBar\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport RoutePath from \"./util/RoutePath\";\n// pages\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Orders from \"./pages/Orders\";\nimport Cart from \"./pages/Cart\";\n\n// sem-ui\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Container } from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <>\n      <AuthProvider>\n        <Router>\n          <NavBar />\n          <Container>\n            <Route exact path=\"/\" component={Home} />\n            <AuthRoute exact path=\"/login\" component={Login} />\n            <AuthRoute exact path=\"/signup\" component={Signup} />\n            <RoutePath exact path=\"/orders\" component={Orders} />\n            <RoutePath exact path=\"/cart\" component={Cart} />\n          </Container>\n        </Router>\n      </AuthProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport {\n  ApolloClient,\n  ApolloLink,\n  InMemoryCache,\n  HttpLink,\n} from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nconst httpLink = new HttpLink({\n  uri: \"https://online-shopping-app-server.herokuapp.com/graphql/\",\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  // Retrieve the authorization token from local storage.\n  const token = localStorage.getItem(\"jwtToken\");\n\n  // Use the setContext method to set the HTTP headers.\n  operation.setContext({\n    headers: {\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  });\n\n  // Call the next link in the middleware chain.\n  return forward(operation);\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), // Chain it with the HttpLink\n  cache: new InMemoryCache(),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from \"react-dom\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}